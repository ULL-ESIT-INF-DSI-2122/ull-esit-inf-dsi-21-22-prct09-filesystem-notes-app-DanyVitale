{"/home/usuario/DSI-modi7/src/BubbleSort/BubbleSort.ts":{"path":"/home/usuario/DSI-modi7/src/BubbleSort/BubbleSort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":28}},"3":{"start":{"line":14,"column":8},"end":{"line":22,"column":9}},"4":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"5":{"start":{"line":15,"column":12},"end":{"line":21,"column":13}},"6":{"start":{"line":15,"column":25},"end":{"line":15,"column":26}},"7":{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},"8":{"start":{"line":17,"column":33},"end":{"line":17,"column":40}},"9":{"start":{"line":18,"column":20},"end":{"line":18,"column":42}},"10":{"start":{"line":19,"column":20},"end":{"line":19,"column":39}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":54}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":20}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":25,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},"type":"if","locations":[{"start":{"line":16,"column":16},"end":{"line":20,"column":17}},{"start":{"line":16,"column":16},"end":{"line":20,"column":17}}],"line":16}},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":9,"6":9,"7":18,"8":4,"9":4,"10":4,"11":3,"12":3,"13":1},"f":{"0":3},"b":{"0":[4,14]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-modi7/src/BubbleSort/BubbleSort.ts","sources":["/home/usuario/DSI-modi7/src/BubbleSort/BubbleSort.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,UAAU;IACrB;;;OAGG;IACH,OAAO,CAAC,IAAc;QACpB,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,6BAA6B;QAElD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACzB,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;iBACpB;aACF;SACF;QACD,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,EAAE,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AApBD,gCAoBC","sourcesContent":["import {Strategy} from \"../Strategy/strategy\";\n\n/**\n * BubbleSort implements the strategy pattern.\n */\nexport class BubbleSort implements Strategy {\n  /**\n   * Execute() sorts the data using the bubble sort algorithm.\n   * @param data Number[]\n   */\n  execute(data: number[]): number[] {\n    data = data.slice(); // creates a copy of the data\n\n    for (let i = 0; i < data.length; i++) {\n      for (let j = 0; j < data.length - 1; j++) {\n        if (data[j] > data[j + 1]) {\n          const swap = data[j];\n          data[j] = data[j + 1];\n          data[j + 1] = swap;\n        }\n      }\n    }\n    console.log(`Bubble sort applied to ${data}`);\n    return data;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b39fad44de346ab2147d991358430e7661c6360a","contentHash":"65a353e43f91f973ace57ef9bc4d9fadc2b44b733239a22357bc625412d41333"},"/home/usuario/DSI-modi7/src/MergeSort/MergeSort.ts":{"path":"/home/usuario/DSI-modi7/src/MergeSort/MergeSort.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":36}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":53}},"4":{"start":{"line":22,"column":27},"end":{"line":22,"column":53}},"5":{"start":{"line":23,"column":18},"end":{"line":23,"column":43}},"6":{"start":{"line":24,"column":19},"end":{"line":24,"column":41}},"7":{"start":{"line":25,"column":8},"end":{"line":28,"column":9}},"8":{"start":{"line":26,"column":12},"end":{"line":26,"column":38}},"9":{"start":{"line":27,"column":12},"end":{"line":27,"column":40}},"10":{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},"11":{"start":{"line":36,"column":23},"end":{"line":36,"column":24}},"12":{"start":{"line":37,"column":24},"end":{"line":37,"column":25}},"13":{"start":{"line":38,"column":26},"end":{"line":38,"column":36}},"14":{"start":{"line":39,"column":27},"end":{"line":39,"column":38}},"15":{"start":{"line":40,"column":25},"end":{"line":40,"column":27}},"16":{"start":{"line":41,"column":8},"end":{"line":66,"column":9}},"17":{"start":{"line":42,"column":28},"end":{"line":42,"column":41}},"18":{"start":{"line":43,"column":29},"end":{"line":43,"column":44}},"19":{"start":{"line":44,"column":12},"end":{"line":65,"column":13}},"20":{"start":{"line":45,"column":16},"end":{"line":58,"column":17}},"21":{"start":{"line":46,"column":20},"end":{"line":46,"column":43}},"22":{"start":{"line":47,"column":20},"end":{"line":47,"column":31}},"23":{"start":{"line":50,"column":20},"end":{"line":57,"column":21}},"24":{"start":{"line":51,"column":24},"end":{"line":51,"column":47}},"25":{"start":{"line":52,"column":24},"end":{"line":52,"column":35}},"26":{"start":{"line":55,"column":24},"end":{"line":55,"column":48}},"27":{"start":{"line":56,"column":24},"end":{"line":56,"column":36}},"28":{"start":{"line":61,"column":16},"end":{"line":64,"column":17}},"29":{"start":{"line":62,"column":20},"end":{"line":62,"column":44}},"30":{"start":{"line":63,"column":20},"end":{"line":63,"column":32}},"31":{"start":{"line":67,"column":8},"end":{"line":67,"column":24}},"32":{"start":{"line":70,"column":0},"end":{"line":70,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":15,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":20},"end":{"line":30,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":22},"end":{"line":68,"column":5}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":28,"column":9}},{"start":{"line":25,"column":8},"end":{"line":28,"column":9}}],"line":25},"1":{"loc":{"start":{"line":41,"column":15},"end":{"line":41,"column":61}},"type":"binary-expr","locations":[{"start":{"line":41,"column":15},"end":{"line":41,"column":35}},{"start":{"line":41,"column":39},"end":{"line":41,"column":61}}],"line":41},"2":{"loc":{"start":{"line":44,"column":12},"end":{"line":65,"column":13}},"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":65,"column":13}},{"start":{"line":44,"column":12},"end":{"line":65,"column":13}}],"line":44},"3":{"loc":{"start":{"line":45,"column":16},"end":{"line":58,"column":17}},"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":58,"column":17}},{"start":{"line":45,"column":16},"end":{"line":58,"column":17}}],"line":45},"4":{"loc":{"start":{"line":50,"column":20},"end":{"line":57,"column":21}},"type":"if","locations":[{"start":{"line":50,"column":20},"end":{"line":57,"column":21}},{"start":{"line":50,"column":20},"end":{"line":57,"column":21}}],"line":50},"5":{"loc":{"start":{"line":61,"column":16},"end":{"line":64,"column":17}},"type":"if","locations":[{"start":{"line":61,"column":16},"end":{"line":64,"column":17}},{"start":{"line":61,"column":16},"end":{"line":64,"column":17}}],"line":61}},"s":{"0":1,"1":1,"2":3,"3":0,"4":9,"5":9,"6":9,"7":9,"8":3,"9":3,"10":9,"11":9,"12":9,"13":9,"14":9,"15":9,"16":9,"17":18,"18":18,"19":18,"20":14,"21":5,"22":5,"23":9,"24":7,"25":7,"26":2,"27":2,"28":4,"29":4,"30":4,"31":9,"32":1},"f":{"0":3,"1":9,"2":9},"b":{"0":[3,6],"1":[27,13],"2":[14,4],"3":[5,9],"4":[7,2],"5":[4,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-modi7/src/MergeSort/MergeSort.ts","sources":["/home/usuario/DSI-modi7/src/MergeSort/MergeSort.ts"],"names":[],"mappings":";;;AACA;;GAEG;AACH,MAAa,SAAS;IACpB;;;OAGG;IACH,OAAO,CAAC,IAAc;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,yBAAyB,IAAI,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,IAAc;QACtB,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC9C,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAElC,IAAI,UAAU,GAAG,CAAC,EAAE;YAClB,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC1B,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7B;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,GAAa,EAAE,IAAc;QAClC,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,MAAM,QAAQ,GAAG,EAAE,CAAC;QAEpB,OAAO,QAAQ,GAAG,SAAS,IAAI,SAAS,GAAG,UAAU,EAAE;YACrD,MAAM,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzB,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC1B,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACvB,QAAQ,EAAE,CAAC;iBACZ;qBAAM;oBACL,IAAI,OAAO,IAAI,QAAQ,EAAE;wBACvB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACvB,QAAQ,EAAE,CAAC;qBACZ;yBAAM;wBACL,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACxB,SAAS,EAAE,CAAC;qBACb;iBACF;aACF;iBAAM;gBACL,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC1B,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACxB,SAAS,EAAE,CAAC;iBACb;aACF;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAhED,8BAgEC","sourcesContent":["import {Strategy} from \"../Strategy/strategy\";\n/**\n * Class MergeSort implements the strategy pattern.\n */\nexport class MergeSort implements Strategy {\n  /**\n   * Execute() sorts the data using the merge sort algorithm.\n   * @param data Number[]\n   */\n  execute(data: number[]) {\n    return this.mergeSort(data);\n    console.log(`Merge sort applied to ${data}`);\n  }\n\n  /**\n   * MergeSort describes Merge Algorithm\n   * @param data Number[]\n   * @returns Number[]\n   */\n  mergeSort(data: number[]): number[] {\n    const halfLength = Math.ceil(data.length / 2);\n    let low = data.slice(0, halfLength);\n    let high = data.slice(halfLength);\n\n    if (halfLength > 1) {\n      low = this.mergeSort(low);\n      high = this.mergeSort(high);\n    }\n\n    return this.divide(low, high);\n  }\n\n  /**\n   * SortedSort describes ordenate algorithm\n   * @returns Number[]\n   */\n  divide(low: number[], high: number[]): number[] {\n    let indexLow = 0;\n    let indexHigh = 0;\n    const lengthLow = low.length;\n    const lengthHigh = high.length;\n    const combined = [];\n\n    while (indexLow < lengthLow || indexHigh < lengthHigh) {\n      const lowItem = low[indexLow];\n      const highItem = high[indexHigh];\n      if (lowItem !== undefined) {\n        if (highItem === undefined) {\n          combined.push(lowItem);\n          indexLow++;\n        } else {\n          if (lowItem <= highItem) {\n            combined.push(lowItem);\n            indexLow++;\n          } else {\n            combined.push(highItem);\n            indexHigh++;\n          }\n        }\n      } else {\n        if (highItem !== undefined) {\n          combined.push(highItem);\n          indexHigh++;\n        }\n      }\n    }\n    return combined;\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f78e39ceaed2d98178d366918552cc0b28467271","contentHash":"399dd17af16ff5b9ca98622b35509b823a79c84a1e739a8b78d5e982aa2a5fc5"},"/home/usuario/DSI-modi7/src/Solver/Solver.ts":{"path":"/home/usuario/DSI-modi7/src/Solver/Solver.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"5":{"start":{"line":24,"column":8},"end":{"line":24,"column":33}},"6":{"start":{"line":31,"column":8},"end":{"line":31,"column":29}},"7":{"start":{"line":37,"column":8},"end":{"line":37,"column":41}},"8":{"start":{"line":40,"column":0},"end":{"line":40,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":32},"end":{"line":11,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":14},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":26},"end":{"line":25,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":5}},"line":36}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":4,"7":0,"8":1},"f":{"0":2,"1":2,"2":2,"3":4,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-modi7/src/Solver/Solver.ts","sources":["/home/usuario/DSI-modi7/src/Solver/Solver.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,MAAM;IACjB,YAAoB,IAAc,EAAU,QAAkB;QAA1C,SAAI,GAAJ,IAAI,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAC9D,CAAC;IACD;;;OAGG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,QAAkB;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IACD;;;OAGG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;CACF;AAhCD,wBAgCC","sourcesContent":["import { Strategy } from \"../Strategy/strategy\";\n\n/**\n * Class Solver describes the context in which the strategy is used.\n */\nexport class Solver {\n  constructor(private data: number[], private strategy: Strategy) {\n  }\n  /**\n   * Data() returns the data used.\n   * @returns Number[]\n   */\n  getData() {\n    return this.data;\n  }\n\n  /**\n   * setStrategy sets the strategy to be used.\n   * @param strategy Type is Strategy\n   */\n  setStrategy(strategy: Strategy) {\n    this.strategy = strategy;\n  }\n  /**\n   * getStrategy returns the strategy used.\n   * @returns Strategy used\n   */\n  getStrategy() {\n    return this.strategy;\n  }\n\n  /**\n   * Logic() solves the problem using the strategy.\n   */\n  logic() {\n    this.strategy.execute(this.data);\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1e8a231c78408df8b0fac2c02a5f7701ebfd60d3","contentHash":"9fecb4b23badf28a671162a091b364ff884ed9cbe7d7351dcbef04bc8490705b"}}